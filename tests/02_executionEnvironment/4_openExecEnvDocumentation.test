--- Q7 testcase ---
Format-Version: 1.0
Q7-vendor: www.xored.com/q7
Contexts: _u4EL4MmsEeGLNoFQBj_CGw,_1Se8cMpuEeG5YN1oc9uimw,_jFN40MnAEeGLNoFQBj_CGw,_5WaA8MnWEeGLNoFQBj_CGw
Element-Name: 4_openExecEnvDocumentation
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _RZQ9AMnXEeGLNoFQBj_CGw
Save-Time: 9/24/12 9:55 AM
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

*** Context ***
+ Clear Workspace
+ An Execution Environment is linked to the LDT
+ A Project is created in the workspace with the Execution Environment
+ The "Luadoc" view is open

*** Actions ***
- Expand the project, then the execution environment, and the "api.zip"
- Select one of the lua files
- Go to Luadoc view
# Check 1
- Select an other lua file
# Check 2

*** Assertions ***
# Check 1 : The documentation associated to the lua file is displayed
# Check 2  :The documentation associated to the new selected lua file is displayed
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

/*********************
*	Created by: Simon Gaestel
*	Creation date: 07/09/2012
*	Last Update: 07/10/2012
*********************/

// Open execution environment documentation
with [get-view "Script Explorer" | get-tree] { 
	select "newProject_execEnvOnCreation/Gideros 2012.2.2.1" | double-click
	select "newProject_execEnvOnCreation/Gideros 2012.2.2.1/api.zip - .*\\\gideros-2012.2.2.1" 
    | double-click
	select "newProject_execEnvOnCreation/Gideros 2012.2.2.1/api.zip - .*\\\gideros-2012.2.2.1/math.lua"
	}
wait 200

with [get-view Luadoc] {
	click
	maximize
}

get-view Luadoc | get-control Browser | get-property text | equals "<HTML><HEAD>\\n"
    + "<STYLE type=text/css CHARSET=\"ISO-8859-1\">/* Font definitions */\\n"
    + "html         { font-family: \'Segoe UI\',sans-serif; font-size: 9pt; font-style: normal; font-weight: normal; }\\n"
    + "body, h4, h5, h6, p, table, td, caption, th, ul, ol, dl, li, dd, dt { font-size: 1em; }\\n"
    + "pre          { font-family: monospace; }\\n"
    + "h1           { font-size: 1.8em; }\t\\n"
    + "h2           { font-size: 1.2em; }\\n"
    + "h3           { font-size: 1.1em; }\\n\\n"
    + "/* Margins */\\n"
    + "h1           { margin-top: 0.3em; margin-bottom: 0.04em }\t\\n"
    + "h2           { margin-top: 2em; margin-bottom: 0.25em }\\n"
    + "h3           { margin-top: 1.7em; margin-bottom: 0.25em }\\n"
    + "h4           { margin-top: 2em; margin-bottom: 0.3em }\\n"
    + "h5           { margin-top: 0px; margin-bottom: 0px }\\n"
    + "p            { margin-top: 1em; margin-bottom: 1em }\\n"
    + "pre          { margin-left: 0.6em }\\n"
    + "ul\t         { margin-top: 0px; margin-bottom: 1em; }\\n"
    + "li\t         { margin-top: 0px; margin-bottom: 0px; } \\n"
    + "li p\t     { margin-top: 0px; margin-bottom: 0px; } \\n"
    + "ol\t         { margin-top: 0px; margin-bottom: 1em; }\\n"
    + "dl\t         { margin-top: 0px; margin-bottom: 1em; }\\n"
    + "dt\t         { margin-top: 0px; margin-bottom: 0px; font-weight: bold; }\\n"
    + "dd\t         { margin-top: 0px; margin-bottom: 0px; }\\n\\n"
    + "/* Styles and colors */\\n"
    + "a:link\t     { color: #0000FF; }\\n"
    + "a:hover\t     { color: #000080; }\\n"
    + "a:visited    { text-decoration: underline; }\\n"
    + "h4           { font-style: italic; }\\n"
    + "strong\t     { font-weight: bold; }\\n"
    + "em\t         { font-style: italic; }\\n"
    + "var\t         { font-style: italic; }\\n"
    + "th\t         { font-weight: bold; }\\n"
    + "</STYLE>\\n"
    + "</HEAD>\\n"
    + "<BODY bgColor=#ffffe1 text=#000000>\\n"
    + "<DIV id=content>\\n"
    + "<H1>Module <CODE>math</CODE></H1>Mathematical Functions. <BR>This library is an interface to the standard C math library. It provides all its functions inside the table math. \\n"
    + "<H2><A id=#(math)>Type <CODE>math</CODE></A></H2>\\n"
    + "<TABLE class=function_list>\\n"
    + "<TBODY>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).abs\">math.abs(x)</A></TD>\\n"
    + "<TD class=summary>Returns the absolute value of <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).acos\">math.acos(x)</A></TD>\\n"
    + "<TD class=summary>Returns the arc cosine of <CODE>x</CODE> (in radians).</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).asin\">math.asin(x)</A></TD>\\n"
    + "<TD class=summary>Returns the arc sine of <CODE>x</CODE> (in radians).</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).atan\">math.atan(x)</A></TD>\\n"
    + "<TD class=summary>Returns the arc tangent of <CODE>x</CODE> (in radians).</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).atan2\">math.atan2(y, x)</A></TD>\\n"
    + "<TD class=summary>Returns the arc tangent of <CODE>y/x</CODE> (in radians), but uses the signs of both parameters to find the quadrant of the result.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).ceil\">math.ceil(x)</A></TD>\\n"
    + "<TD class=summary>Returns the smallest integer larger than or equal to <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).cos\">math.cos(x)</A></TD>\\n"
    + "<TD class=summary>Returns the cosine of <CODE>x</CODE> (assumed to be in radians).</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).cosh\">math.cosh(x)</A></TD>\\n"
    + "<TD class=summary>Returns the hyperbolic cosine of <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).deg\">math.deg(x)</A></TD>\\n"
    + "<TD class=summary>Returns the angle <CODE>x</CODE> (given in radians) in degrees.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).exp\">math.exp(x)</A></TD>\\n"
    + "<TD class=summary>Returns the value <EM>e^x</EM>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).floor\">math.floor(x)</A></TD>\\n"
    + "<TD class=summary>Returns the largest integer smaller than or equal to <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).fmod\">math.fmod(x, y)</A></TD>\\n"
    + "<TD class=summary>Returns the remainder of the division of <CODE>x</CODE> by <CODE>y</CODE> that rounds the quotient towards zero.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).frexp\">math.frexp(x)</A></TD>\\n"
    + "<TD class=summary>Returns <CODE>m</CODE> and <CODE>e</CODE> such that <EM>x = m2^e</EM>, <CODE>e</CODE> is an integer and the absolute value of <CODE>m</CODE> is in the range <EM>[0.5, 1)</EM> (or zero when <CODE>x</CODE> is zero).</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).huge\">math.huge</A></TD>\\n"
    + "<TD class=summary>The value <CODE>HUGE_VAL</CODE>, a value larger than or equal to any other numerical value.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).ldexp\">math.ldexp(m, e)</A></TD>\\n"
    + "<TD class=summary>Returns <EM>m2^e</EM> (<CODE>e</CODE> should be an integer).</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).log\">math.log(x)</A></TD>\\n"
    + "<TD class=summary>Returns the natural logarithm of <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).log10\">math.log10(x)</A></TD>\\n"
    + "<TD class=summary>Returns the base-10 logarithm of <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).max\">math.max(x)</A></TD>\\n"
    + "<TD class=summary>Returns the maximum value among its arguments.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).min\">math.min(x)</A></TD>\\n"
    + "<TD class=summary>Returns the minimum value among its arguments.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).modf\">math.modf(x)</A></TD>\\n"
    + "<TD class=summary>Returns two numbers, the integral part of <CODE>x</CODE> and the fractional part of <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).pi\">math.pi</A></TD>\\n"
    + "<TD class=summary>The value of <EM>pi</EM>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).pow\">math.pow(x, y)</A></TD>\\n"
    + "<TD class=summary>Returns <EM>x^y</EM>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).rad\">math.rad(x)</A></TD>\\n"
    + "<TD class=summary>Returns the angle <CODE>x</CODE> (given in degrees) in radians.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).random\">math.random(m, n)</A></TD>\\n"
    + "<TD class=summary>This function is an interface to the simple pseudo-random generator function <CODE>rand</CODE> provided by ANSI C.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).randomseed\">math.randomseed(x)</A></TD>\\n"
    + "<TD class=summary>Sets <CODE>x</CODE> as the \"seed\" for the pseudo-random generator: equal seeds produce equal sequences of numbers.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).sin\">math.sin(x)</A></TD>\\n"
    + "<TD class=summary>Returns the sine of <CODE>x</CODE> (assumed to be in radians).</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).sinh\">math.sinh(x)</A></TD>\\n"
    + "<TD class=summary>Returns the hyperbolic sine of <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).sqrt\">math.sqrt(x)</A></TD>\\n"
    + "<TD class=summary>Returns the square root of <CODE>x</CODE>.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).tan\">math.tan(x)</A></TD>\\n"
    + "<TD class=summary>Returns the tangent of <CODE>x</CODE> (assumed to be in radians).</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(math).tanh\">math.tanh(x)</A></TD>\\n"
    + "<TD class=summary>Returns the hyperbolic tangent of <CODE>x</CODE>.</TD></TR></TBODY></TABLE>\\n"
    + "<H2>Type <CODE>math</CODE></H2>\\n"
    + "<H3>Field(s)</H3>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).abs><STRONG>math.abs(x)</STRONG> </A>\\n"
    + "<DD>Returns the absolute value of <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).acos><STRONG>math.acos(x)</STRONG> </A>\\n"
    + "<DD>Returns the arc cosine of <CODE>x</CODE> (in radians). \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).asin><STRONG>math.asin(x)</STRONG> </A>\\n"
    + "<DD>Returns the arc sine of <CODE>x</CODE> (in radians). \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).atan><STRONG>math.atan(x)</STRONG> </A>\\n"
    + "<DD>Returns the arc tangent of <CODE>x</CODE> (in radians). \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).atan2><STRONG>math.atan2(y, x)</STRONG> </A>\\n"
    + "<DD>Returns the arc tangent of <CODE>y/x</CODE> (in radians), but uses the signs of both parameters to find the quadrant of the result. <BR>(It also handles correctly the case of <CODE>x</CODE> being zero.) \\n"
    + "<H3>Parameters</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>y </EM></CODE>: \\n"
    + "<P></P>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).ceil><STRONG>math.ceil(x)</STRONG> </A>\\n"
    + "<DD>Returns the smallest integer larger than or equal to <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).cos><STRONG>math.cos(x)</STRONG> </A>\\n"
    + "<DD>Returns the cosine of <CODE>x</CODE> (assumed to be in radians). \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).cosh><STRONG>math.cosh(x)</STRONG> </A>\\n"
    + "<DD>Returns the hyperbolic cosine of <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).deg><STRONG>math.deg(x)</STRONG> </A>\\n"
    + "<DD>Returns the angle <CODE>x</CODE> (given in radians) in degrees. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).exp><STRONG>math.exp(x)</STRONG> </A>\\n"
    + "<DD>Returns the value <EM>e^x</EM>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).floor><STRONG>math.floor(x)</STRONG> </A>\\n"
    + "<DD>Returns the largest integer smaller than or equal to <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).fmod><STRONG>math.fmod(x, y)</STRONG> </A>\\n"
    + "<DD>Returns the remainder of the division of <CODE>x</CODE> by <CODE>y</CODE> that rounds the quotient towards zero. \\n"
    + "<H3>Parameters</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P>\\n"
    + "<LI><CODE><EM>y </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).frexp><STRONG>math.frexp(x)</STRONG> </A>\\n"
    + "<DD>Returns <CODE>m</CODE> and <CODE>e</CODE> such that <EM>x = m2^e</EM>, <CODE>e</CODE> is an integer and the absolute value of <CODE>m</CODE> is in the range <EM>[0.5, 1)</EM> (or zero when <CODE>x</CODE> is zero). \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).huge><STRONG>math.huge</STRONG> </A>\\n"
    + "<DD>The value <CODE>HUGE_VAL</CODE>, a value larger than or equal to any other numerical value. </DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).ldexp><STRONG>math.ldexp(m, e)</STRONG> </A>\\n"
    + "<DD>Returns <EM>m2^e</EM> (<CODE>e</CODE> should be an integer). \\n"
    + "<H3>Parameters</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>m </EM></CODE>: \\n"
    + "<P></P>\\n"
    + "<LI><CODE><EM>e </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).log><STRONG>math.log(x)</STRONG> </A>\\n"
    + "<DD>Returns the natural logarithm of <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).log10><STRONG>math.log10(x)</STRONG> </A>\\n"
    + "<DD>Returns the base-10 logarithm of <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).max><STRONG>math.max(x)</STRONG> </A>\\n"
    + "<DD>Returns the maximum value among its arguments. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).min><STRONG>math.min(x)</STRONG> </A>\\n"
    + "<DD>Returns the minimum value among its arguments. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).modf><STRONG>math.modf(x)</STRONG> </A>\\n"
    + "<DD>Returns two numbers, the integral part of <CODE>x</CODE> and the fractional part of <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).pi><STRONG>math.pi</STRONG> </A>\\n"
    + "<DD>The value of <EM>pi</EM>. </DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).pow><STRONG>math.pow(x, y)</STRONG> </A>\\n"
    + "<DD>Returns <EM>x^y</EM>. <BR>(You can also use the expression <CODE>x^y</CODE> to compute this value.) \\n"
    + "<H3>Parameters</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P>\\n"
    + "<LI><CODE><EM>y </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).rad><STRONG>math.rad(x)</STRONG> </A>\\n"
    + "<DD>Returns the angle <CODE>x</CODE> (given in degrees) in radians. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).random><STRONG>math.random(m, n)</STRONG> </A>\\n"
    + "<DD>This function is an interface to the simple pseudo-random generator function <CODE>rand</CODE> provided by ANSI C. <BR>(No guarantees can be given for its statistical properties.) When called without arguments, returns a uniform pseudo-random real number in the range <EM>[0,1)</EM>. When called with an integer number <CODE>m</CODE>, <CODE>math.random</CODE> returns a uniform pseudo-random integer in the range <EM>[1, m]</EM>. When called with two integer numbers <CODE>m</CODE> and <CODE>n</CODE>, <CODE>math.random</CODE> returns a uniform pseudo-random integer in the range <EM>[m, n]</EM>. \\n"
    + "<H3>Parameters</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>m </EM></CODE>: \\n"
    + "<P></P>\\n"
    + "<LI><CODE><EM>n </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).randomseed><STRONG>math.randomseed(x)</STRONG> </A>\\n"
    + "<DD>Sets <CODE>x</CODE> as the \"seed\" for the pseudo-random generator: equal seeds produce equal sequences of numbers. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).sin><STRONG>math.sin(x)</STRONG> </A>\\n"
    + "<DD>Returns the sine of <CODE>x</CODE> (assumed to be in radians). \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).sinh><STRONG>math.sinh(x)</STRONG> </A>\\n"
    + "<DD>Returns the hyperbolic sine of <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).sqrt><STRONG>math.sqrt(x)</STRONG> </A>\\n"
    + "<DD>Returns the square root of <CODE>x</CODE>. <BR>(You can also use the expression <CODE>x^0.5</CODE> to compute this value.) \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).tan><STRONG>math.tan(x)</STRONG> </A>\\n"
    + "<DD>Returns the tangent of <CODE>x</CODE> (assumed to be in radians). \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(math).tanh><STRONG>math.tanh(x)</STRONG> </A>\\n"
    + "<DD>Returns the hyperbolic tangent of <CODE>x</CODE>. \\n"
    + "<H3>Parameter</H3>\\n"
    + "<UL>\\n"
    + "<LI><CODE><EM>x </EM></CODE>: \\n"
    + "<P></P></LI></UL></DD></DL></DIV></FONT></BODY></HTML>" | verify-true

get-view "Luadoc" | restore

get-view "Script Explorer" | get-tree 
    | select "newProject_execEnvOnCreation/Gideros 2012.2.2.1/api.zip - .*\\\gideros-2012.2.2.1/Accelerometer.lua"
wait 200

get-view "Luadoc" | maximize
get-view Luadoc | get-control Browser | get-property text | equals "<HTML><HEAD>\\n"
    + "<STYLE type=text/css CHARSET=\"ISO-8859-1\">/* Font definitions */\\n"
    + "html         { font-family: \'Segoe UI\',sans-serif; font-size: 9pt; font-style: normal; font-weight: normal; }\\n"
    + "body, h4, h5, h6, p, table, td, caption, th, ul, ol, dl, li, dd, dt { font-size: 1em; }\\n"
    + "pre          { font-family: monospace; }\\n"
    + "h1           { font-size: 1.8em; }\t\\n"
    + "h2           { font-size: 1.2em; }\\n"
    + "h3           { font-size: 1.1em; }\\n\\n"
    + "/* Margins */\\n"
    + "h1           { margin-top: 0.3em; margin-bottom: 0.04em }\t\\n"
    + "h2           { margin-top: 2em; margin-bottom: 0.25em }\\n"
    + "h3           { margin-top: 1.7em; margin-bottom: 0.25em }\\n"
    + "h4           { margin-top: 2em; margin-bottom: 0.3em }\\n"
    + "h5           { margin-top: 0px; margin-bottom: 0px }\\n"
    + "p            { margin-top: 1em; margin-bottom: 1em }\\n"
    + "pre          { margin-left: 0.6em }\\n"
    + "ul\t         { margin-top: 0px; margin-bottom: 1em; }\\n"
    + "li\t         { margin-top: 0px; margin-bottom: 0px; } \\n"
    + "li p\t     { margin-top: 0px; margin-bottom: 0px; } \\n"
    + "ol\t         { margin-top: 0px; margin-bottom: 1em; }\\n"
    + "dl\t         { margin-top: 0px; margin-bottom: 1em; }\\n"
    + "dt\t         { margin-top: 0px; margin-bottom: 0px; font-weight: bold; }\\n"
    + "dd\t         { margin-top: 0px; margin-bottom: 0px; }\\n\\n"
    + "/* Styles and colors */\\n"
    + "a:link\t     { color: #0000FF; }\\n"
    + "a:hover\t     { color: #000080; }\\n"
    + "a:visited    { text-decoration: underline; }\\n"
    + "h4           { font-style: italic; }\\n"
    + "strong\t     { font-weight: bold; }\\n"
    + "em\t         { font-style: italic; }\\n"
    + "var\t         { font-style: italic; }\\n"
    + "th\t         { font-weight: bold; }\\n"
    + "</STYLE>\\n"
    + "</HEAD>\\n"
    + "<BODY bgColor=#ffffe1 text=#000000>\\n"
    + "<DIV id=content>\\n"
    + "<H1>Module <CODE>Accelerometer</CODE></H1>The <CODE>Accelerometer</CODE> class is used to access accelerometer data. <BR>\\n"
    + "<P>The <CODE>Accelerometer</CODE> class is defined in module \"accelerometer\". Therefore, you need to call <CODE>require \"accelerometer\"</CODE> before using it. Loading the \"accelerometer\" module also creates a global variable <CODE>accelerometer</CODE> of type <CODE>Accelerometer</CODE> for direct use. </P>\\n"
    + "<P>Examples \\n"
    + "<HR>\\n\\n"
    + "<P></P><PRE><CODE>require \"accelerometer\"\\n\\n"
    + "accelerometer:start()\\n\\n"
    + "local x, y, z = accelerometer:getAcceleration()\\n"
    + "print(x, y, z)\\n"
    + "</CODE></PRE>\\n"
    + "<H2><A id=#(Accelerometer)>Type <CODE>Accelerometer</CODE></A></H2>\\n"
    + "<TABLE class=function_list>\\n"
    + "<TBODY>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(Accelerometer).getAcceleration\">Accelerometer:getAcceleration()</A></TD>\\n"
    + "<TD class=summary>Returns the 3-axis acceleration measured by the accelerometer.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(Accelerometer).isAvailable\">Accelerometer:isAvailable()</A></TD>\\n"
    + "<TD class=summary>Returns <CODE>true</CODE> if accelerometer is available for this platform, <CODE>false</CODE> otherwise.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(Accelerometer).start\">Accelerometer:start()</A></TD>\\n"
    + "<TD class=summary>Starts the generation of accelerometer samples.</TD></TR>\\n"
    + "<TR>\\n"
    + "<TD class=name noWrap><A href=\"##(Accelerometer).stop\">Accelerometer:stop()</A></TD>\\n"
    + "<TD class=summary>Stops the generation of accelerometer samples.</TD></TR></TBODY></TABLE>\\n"
    + "<H2>Type <CODE>Accelerometer</CODE></H2>\\n"
    + "<H3>Field(s)</H3>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(Accelerometer).getAcceleration><STRONG>Accelerometer:getAcceleration()</STRONG> </A>\\n"
    + "<DD>Returns the 3-axis acceleration measured by the accelerometer. \\n"
    + "<H3>Return value</H3>\\n"
    + "<P>3 values as x-axis, y-axis and z-axis acceleration in G\'s </P></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(Accelerometer).isAvailable><STRONG>Accelerometer:isAvailable()</STRONG> </A>\\n"
    + "<DD>Returns <CODE>true</CODE> if accelerometer is available for this platform, <CODE>false</CODE> otherwise. \\n"
    + "<H3>Return value</H3>\\n"
    + "<P><CODE>true</CODE> if accelerometer is available for this platform, <CODE>false</CODE> otherwise. </P></DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(Accelerometer).start><STRONG>Accelerometer:start()</STRONG> </A>\\n"
    + "<DD>Starts the generation of accelerometer samples. </DD></DL>\\n"
    + "<DL class=function>\\n"
    + "<DT><A id=#(Accelerometer).stop><STRONG>Accelerometer:stop()</STRONG> </A>\\n"
    + "<DD>Stops the generation of accelerometer samples. </DD></DL></DIV></FONT></BODY></HTML>" | verify-true
get-view "Luadoc" | restore
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
